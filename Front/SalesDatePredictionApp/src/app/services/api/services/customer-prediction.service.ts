/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiCustomerPredictionGet$Json } from '../fn/customer-prediction/api-customer-prediction-get-json';
import { ApiCustomerPredictionGet$Json$Params } from '../fn/customer-prediction/api-customer-prediction-get-json';
import { apiCustomerPredictionGet$Plain } from '../fn/customer-prediction/api-customer-prediction-get-plain';
import { ApiCustomerPredictionGet$Plain$Params } from '../fn/customer-prediction/api-customer-prediction-get-plain';
import { CustomerPredictionDto } from '../models/customer-prediction-dto';

@Injectable({ providedIn: 'root' })
export class CustomerPredictionService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiCustomerPredictionGet()` */
  static readonly ApiCustomerPredictionGetPath = '/api/CustomerPrediction';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCustomerPredictionGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCustomerPredictionGet$Plain$Response(params?: ApiCustomerPredictionGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<CustomerPredictionDto>>> {
    return apiCustomerPredictionGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCustomerPredictionGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCustomerPredictionGet$Plain(params?: ApiCustomerPredictionGet$Plain$Params, context?: HttpContext): Observable<Array<CustomerPredictionDto>> {
    return this.apiCustomerPredictionGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<CustomerPredictionDto>>): Array<CustomerPredictionDto> => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCustomerPredictionGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCustomerPredictionGet$Json$Response(params?: ApiCustomerPredictionGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<CustomerPredictionDto>>> {
    return apiCustomerPredictionGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCustomerPredictionGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCustomerPredictionGet$Json(params?: ApiCustomerPredictionGet$Json$Params, context?: HttpContext): Observable<Array<CustomerPredictionDto>> {
    return this.apiCustomerPredictionGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<CustomerPredictionDto>>): Array<CustomerPredictionDto> => r.body)
    );
  }

}
